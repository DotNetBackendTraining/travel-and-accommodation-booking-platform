{
	"info": {
		"_postman_id": "7afc2f07-c293-48dc-8d4a-f9c05c34799b",
		"name": "Travel and Accommodation Booking Platform API V1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27911723"
	},
	"item": [
		{
			"name": "bookings",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "payment",
							"item": [
								{
									"name": "Retrieves the details of a specific booking payment for the user.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bookings/:id/payment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":id",
												"payment"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the booking."
												}
											]
										}
									},
									"response": [
										{
											"name": "Returns the details of the payment.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bookings/:id/payment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bookings",
														":id",
														"payment"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"paymentId\": \"<uuid>\",\n  \"priceCalculation\": {\n    \"originalPrice\": {\n      \"value\": \"<double>\"\n    },\n    \"appliedDiscount\": {\n      \"hotelId\": \"<uuid>\",\n      \"rate\": {\n        \"percentage\": \"<double>\"\n      },\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"finalPrice\": {\n      \"value\": \"<double>\"\n    }\n  },\n  \"personalInformation\": {\n    \"fullName\": \"<string>\",\n    \"phoneNumber\": \"<string>\"\n  },\n  \"confirmationNumber\": \"<string>\",\n  \"status\": \"Completed\"\n}"
										},
										{
											"name": "Unauthorized if credentials are invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bookings/:id/payment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bookings",
														":id",
														"payment"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "If a resource is not found (e.g. Booking, Payment).",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bookings/:id/payment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bookings",
														":id",
														"payment"
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieves the details of a specific booking for the user.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings/:id?IncludeCalculatedPrice=<boolean>&IncludeHotelDetails=<boolean>&IncludeRoomsList=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":id"
									],
									"query": [
										{
											"key": "IncludeCalculatedPrice",
											"value": "<boolean>",
											"description": "Indicates whether the calculated price for the booking should be included in the response.\r\nIf set to true, the total price including any applicable discounts will be included."
										},
										{
											"key": "IncludeHotelDetails",
											"value": "<boolean>",
											"description": "Indicates whether the hotel details associated with the booking should be included in the response.\r\nIf set to true, detailed information about the hotel will be included."
										},
										{
											"key": "IncludeRoomsList",
											"value": "<boolean>",
											"description": "Indicates whether the list of rooms included in the booking should be included in the response.\r\nIf set to true, details about the rooms booked will be included."
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the booking."
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the details of the booking with all includes.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bookings/:id?IncludeCalculatedPrice=true&IncludeHotelDetails=true&IncludeRoomsList=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":id"
											],
											"query": [
												{
													"key": "IncludeCalculatedPrice",
													"value": "true",
													"description": "Indicates whether the calculated price for the booking should be included in the response.\r\nIf set to true, the total price including any applicable discounts will be included."
												},
												{
													"key": "IncludeHotelDetails",
													"value": "true",
													"description": "Indicates whether the hotel details associated with the booking should be included in the response.\r\nIf set to true, detailed information about the hotel will be included."
												},
												{
													"key": "IncludeRoomsList",
													"value": "true",
													"description": "Indicates whether the list of rooms included in the booking should be included in the response.\r\nIf set to true, details about the rooms booked will be included."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"booking\": {\n    \"id\": \"<uuid>\",\n    \"checking\": {\n      \"checkInDate\": \"<dateTime>\",\n      \"checkOutDate\": \"<dateTime>\"\n    },\n    \"numberOfGuests\": {\n      \"adults\": \"<integer>\",\n      \"children\": \"<integer>\"\n    },\n    \"specialRequest\": {\n      \"request\": \"<string>\"\n    }\n  },\n  \"bookingHasConfirmedPayment\": \"<boolean>\",\n  \"priceCalculation\": {\n    \"originalPrice\": {\n      \"value\": \"<double>\"\n    },\n    \"appliedDiscount\": {\n      \"hotelId\": \"<uuid>\",\n      \"rate\": {\n        \"percentage\": \"<double>\"\n      },\n      \"id\": \"<uuid>\",\n      \"createdAt\": \"<dateTime>\",\n      \"updatedAt\": \"<dateTime>\"\n    },\n    \"finalPrice\": {\n      \"value\": \"<double>\"\n    }\n  },\n  \"hotel\": {\n    \"id\": \"<uuid>\",\n    \"name\": \"<string>\",\n    \"starRate\": \"FiveStars\",\n    \"description\": \"<string>\"\n  },\n  \"rooms\": [\n    {\n      \"id\": \"<uuid>\",\n      \"roomNumber\": \"<integer>\",\n      \"roomType\": \"Budget\",\n      \"description\": \"<string>\",\n      \"price\": {\n        \"value\": \"<double>\"\n      },\n      \"maxNumberOfGuests\": {\n        \"adults\": \"<integer>\",\n        \"children\": \"<integer>\"\n      }\n    },\n    {\n      \"id\": \"<uuid>\",\n      \"roomNumber\": \"<integer>\",\n      \"roomType\": \"Boutique\",\n      \"description\": \"<string>\",\n      \"price\": {\n        \"value\": \"<double>\"\n      },\n      \"maxNumberOfGuests\": {\n        \"adults\": \"<integer>\",\n        \"children\": \"<integer>\"\n      }\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bookings/:id?IncludeCalculatedPrice=<boolean>&IncludeHotelDetails=<boolean>&IncludeRoomsList=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":id"
											],
											"query": [
												{
													"key": "IncludeCalculatedPrice",
													"value": "<boolean>",
													"description": "Indicates whether the calculated price for the booking should be included in the response.\r\nIf set to true, the total price including any applicable discounts will be included."
												},
												{
													"key": "IncludeHotelDetails",
													"value": "<boolean>",
													"description": "Indicates whether the hotel details associated with the booking should be included in the response.\r\nIf set to true, detailed information about the hotel will be included."
												},
												{
													"key": "IncludeRoomsList",
													"value": "<boolean>",
													"description": "Indicates whether the list of rooms included in the booking should be included in the response.\r\nIf set to true, details about the rooms booked will be included."
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the booking is not found for the user.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":id"
											],
											"query": [
												{
													"key": "IncludeCalculatedPrice",
													"value": "<boolean>",
													"description": "Indicates whether the calculated price for the booking should be included in the response.\r\nIf set to true, the total price including any applicable discounts will be included.",
													"disabled": true
												},
												{
													"key": "IncludeHotelDetails",
													"value": "<boolean>",
													"description": "Indicates whether the hotel details associated with the booking should be included in the response.\r\nIf set to true, detailed information about the hotel will be included.",
													"disabled": true
												},
												{
													"key": "IncludeRoomsList",
													"value": "<boolean>",
													"description": "Indicates whether the list of rooms included in the booking should be included in the response.\r\nIf set to true, details about the rooms booked will be included.",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "a2db1fd5-f04a-40ec-9418-08dcbba02001"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Booking.IdNotFound\",\n            \"message\": \"Booking with the given ID does not exist\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Deletes an existing booking for the user.",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the booking to delete."
										}
									]
								}
							},
							"response": [
								{
									"name": "No content if the deletion is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the booking is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "a2db1fd5-f04a-40ec-9418-08dcbba02000"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Booking.IdNotFound\",\n            \"message\": \"Booking with the given ID does not exist\"\n        }\n    ]\n}"
								},
								{
									"name": "If the booking cannot be deleted due to existing payment.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bookings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.8\",\n    \"title\": \"Conflict\",\n    \"status\": 409,\n    \"errors\": [\n        {\n            \"code\": \"Booking.CannotDeleteBookingWithPayment\",\n            \"message\": \"Cannot delete booking as it has an associated payment\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieves bookings for the user with various filtering options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/bookings?PaginationParameters.PageNumber=<integer>&PaginationParameters.PageSize=<integer>&Timespan=PastOnly&LatestBookingPerHotel=<boolean>&CheckingInStartDate=<dateTime>&CheckingInEndDate=<dateTime>&CheckingOutStartDate=<dateTime>&CheckingOutEndDate=<dateTime>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bookings"
							],
							"query": [
								{
									"key": "PaginationParameters.PageNumber",
									"value": "<integer>",
									"description": "The current page number to retrieve.\r\nMust be a positive integer."
								},
								{
									"key": "PaginationParameters.PageSize",
									"value": "<integer>",
									"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
								},
								{
									"key": "Timespan",
									"value": "PastOnly",
									"description": "The timespan option to filter bookings by their time period. Options:\r\n<list type=\"bullet\"><item><description>All - Includes all bookings regardless of time period.</description></item><item><description>PastOnly - Includes only past bookings.</description></item><item><description>FutureOnly - Includes only future bookings.</description></item></list>"
								},
								{
									"key": "LatestBookingPerHotel",
									"value": "<boolean>",
									"description": "Indicates whether to retrieve only the latest booking per hotel. If set to true,\r\nonly the latest booking per hotel will be retrieved based on the timespan filter.\r\nSo if PastOnly timespan is set, only the latest booking in the past for each hotel is retrieved."
								},
								{
									"key": "CheckingInStartDate",
									"value": "<dateTime>",
									"description": "The start date for filtering bookings by their check-in date."
								},
								{
									"key": "CheckingInEndDate",
									"value": "<dateTime>",
									"description": "The end date for filtering bookings by their check-in date."
								},
								{
									"key": "CheckingOutStartDate",
									"value": "<dateTime>",
									"description": "The start date for filtering bookings by their check-out date."
								},
								{
									"key": "CheckingOutEndDate",
									"value": "<dateTime>",
									"description": "The end date for filtering bookings by their check-out date."
								}
							]
						}
					},
					"response": [
						{
							"name": "Returns the latest bookings for the user.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings?PaginationParameters.PageNumber=1&PaginationParameters.PageSize=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "1",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "5",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										},
										{
											"key": "Timespan",
											"value": "PastOnly",
											"description": "The timespan option to filter bookings by their time period. Options:\r\n<list type=\"bullet\"><item><description>All - Includes all bookings regardless of time period.</description></item><item><description>PastOnly - Includes only past bookings.</description></item><item><description>FutureOnly - Includes only future bookings.</description></item></list>",
											"disabled": true
										},
										{
											"key": "LatestBookingPerHotel",
											"value": "<boolean>",
											"description": "Indicates whether to retrieve only the latest booking per hotel. If set to true,\r\nonly the latest booking per hotel will be retrieved based on the timespan filter.\r\nSo if PastOnly timespan is set, only the latest booking in the past for each hotel is retrieved.",
											"disabled": true
										},
										{
											"key": "CheckingInStartDate",
											"value": "<dateTime>",
											"description": "The start date for filtering bookings by their check-in date.",
											"disabled": true
										},
										{
											"key": "CheckingInEndDate",
											"value": "<dateTime>",
											"description": "The end date for filtering bookings by their check-in date.",
											"disabled": true
										},
										{
											"key": "CheckingOutStartDate",
											"value": "<dateTime>",
											"description": "The start date for filtering bookings by their check-out date.",
											"disabled": true
										},
										{
											"key": "CheckingOutEndDate",
											"value": "<dateTime>",
											"description": "The end date for filtering bookings by their check-out date.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": {\n    \"totalCount\": \"<integer>\",\n    \"items\": [\n      {\n        \"id\": \"<uuid>\",\n        \"checking\": {\n          \"checkInDate\": \"<dateTime>\",\n          \"checkOutDate\": \"<dateTime>\"\n        },\n        \"hotel\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"starRate\": \"OneStar\",\n          \"thumbnailImage\": {\n            \"url\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          \"minimumPrice\": {\n            \"value\": \"<double>\"\n          },\n          \"maximumPrice\": {\n            \"value\": \"<double>\"\n          }\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"checking\": {\n          \"checkInDate\": \"<dateTime>\",\n          \"checkOutDate\": \"<dateTime>\"\n        },\n        \"hotel\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"starRate\": \"FiveStars\",\n          \"thumbnailImage\": {\n            \"url\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          \"minimumPrice\": {\n            \"value\": \"<double>\"\n          },\n          \"maximumPrice\": {\n            \"value\": \"<double>\"\n          }\n        }\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Returns the history of the user (Latest booking per hotel in the past).",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings?PaginationParameters.PageNumber=1&PaginationParameters.PageSize=5&Timespan=PastOnly&LatestBookingPerHotel=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "1",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "5",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										},
										{
											"key": "Timespan",
											"value": "PastOnly",
											"description": "The timespan option to filter bookings by their time period. Options:\r\n<list type=\"bullet\"><item><description>All - Includes all bookings regardless of time period.</description></item><item><description>PastOnly - Includes only past bookings.</description></item><item><description>FutureOnly - Includes only future bookings.</description></item></list>"
										},
										{
											"key": "LatestBookingPerHotel",
											"value": "true",
											"description": "Indicates whether to retrieve only the latest booking per hotel. If set to true,\r\nonly the latest booking per hotel will be retrieved based on the timespan filter.\r\nSo if PastOnly timespan is set, only the latest booking in the past for each hotel is retrieved."
										},
										{
											"key": "CheckingInStartDate",
											"value": "<dateTime>",
											"description": "The start date for filtering bookings by their check-in date.",
											"disabled": true
										},
										{
											"key": "CheckingInEndDate",
											"value": "<dateTime>",
											"description": "The end date for filtering bookings by their check-in date.",
											"disabled": true
										},
										{
											"key": "CheckingOutStartDate",
											"value": "<dateTime>",
											"description": "The start date for filtering bookings by their check-out date.",
											"disabled": true
										},
										{
											"key": "CheckingOutEndDate",
											"value": "<dateTime>",
											"description": "The end date for filtering bookings by their check-out date.",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": {\n    \"totalCount\": \"<integer>\",\n    \"items\": [\n      {\n        \"id\": \"<uuid>\",\n        \"checking\": {\n          \"checkInDate\": \"<dateTime>\",\n          \"checkOutDate\": \"<dateTime>\"\n        },\n        \"hotel\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"starRate\": \"OneStar\",\n          \"thumbnailImage\": {\n            \"url\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          \"minimumPrice\": {\n            \"value\": \"<double>\"\n          },\n          \"maximumPrice\": {\n            \"value\": \"<double>\"\n          }\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"checking\": {\n          \"checkInDate\": \"<dateTime>\",\n          \"checkOutDate\": \"<dateTime>\"\n        },\n        \"hotel\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"starRate\": \"FiveStars\",\n          \"thumbnailImage\": {\n            \"url\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          \"minimumPrice\": {\n            \"value\": \"<double>\"\n          },\n          \"maximumPrice\": {\n            \"value\": \"<double>\"\n          }\n        }\n      }\n    ]\n  }\n}"
						},
						{
							"name": "If the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings?PaginationParameters.PageNumber=<integer>&PaginationParameters.PageSize=<integer>&Timespan=PastOnly&LatestBookingPerHotel=<boolean>&CheckingInStartDate=<dateTime>&CheckingInEndDate=<dateTime>&CheckingOutStartDate=<dateTime>&CheckingOutEndDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "<integer>",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "<integer>",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										},
										{
											"key": "Timespan",
											"value": "PastOnly",
											"description": "The timespan option to filter bookings by their time period. Options:\r\n<list type=\"bullet\"><item><description>All - Includes all bookings regardless of time period.</description></item><item><description>PastOnly - Includes only past bookings.</description></item><item><description>FutureOnly - Includes only future bookings.</description></item></list>"
										},
										{
											"key": "LatestBookingPerHotel",
											"value": "<boolean>",
											"description": "Indicates whether to retrieve only the latest booking per hotel. If set to true,\r\nonly the latest booking per hotel will be retrieved based on the timespan filter.\r\nSo if PastOnly timespan is set, only the latest booking in the past for each hotel is retrieved."
										},
										{
											"key": "CheckingInStartDate",
											"value": "<dateTime>",
											"description": "The start date for filtering bookings by their check-in date."
										},
										{
											"key": "CheckingInEndDate",
											"value": "<dateTime>",
											"description": "The end date for filtering bookings by their check-in date."
										},
										{
											"key": "CheckingOutStartDate",
											"value": "<dateTime>",
											"description": "The start date for filtering bookings by their check-out date."
										},
										{
											"key": "CheckingOutEndDate",
											"value": "<dateTime>",
											"description": "The end date for filtering bookings by their check-out date."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized if credentials are invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings?PaginationParameters.PageNumber=<integer>&PaginationParameters.PageSize=<integer>&Timespan=PastOnly&LatestBookingPerHotel=<boolean>&CheckingInStartDate=<dateTime>&CheckingInEndDate=<dateTime>&CheckingOutStartDate=<dateTime>&CheckingOutEndDate=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "<integer>",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "<integer>",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										},
										{
											"key": "Timespan",
											"value": "PastOnly",
											"description": "The timespan option to filter bookings by their time period. Options:\r\n<list type=\"bullet\"><item><description>All - Includes all bookings regardless of time period.</description></item><item><description>PastOnly - Includes only past bookings.</description></item><item><description>FutureOnly - Includes only future bookings.</description></item></list>"
										},
										{
											"key": "LatestBookingPerHotel",
											"value": "<boolean>",
											"description": "Indicates whether to retrieve only the latest booking per hotel. If set to true,\r\nonly the latest booking per hotel will be retrieved based on the timespan filter.\r\nSo if PastOnly timespan is set, only the latest booking in the past for each hotel is retrieved."
										},
										{
											"key": "CheckingInStartDate",
											"value": "<dateTime>",
											"description": "The start date for filtering bookings by their check-in date."
										},
										{
											"key": "CheckingInEndDate",
											"value": "<dateTime>",
											"description": "The end date for filtering bookings by their check-in date."
										},
										{
											"key": "CheckingOutStartDate",
											"value": "<dateTime>",
											"description": "The start date for filtering bookings by their check-out date."
										},
										{
											"key": "CheckingOutEndDate",
											"value": "<dateTime>",
											"description": "The end date for filtering bookings by their check-out date."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If the request is invalid (validation error).",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings?PaginationParameters.PageNumber=1&PaginationParameters.PageSize=5&CheckingInStartDate=1/1/2024&CheckingInEndDate=1/1/2023",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "1",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "5",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										},
										{
											"key": "Timespan",
											"value": "PastOnly",
											"description": "The timespan option to filter bookings by their time period. Options:\r\n<list type=\"bullet\"><item><description>All - Includes all bookings regardless of time period.</description></item><item><description>PastOnly - Includes only past bookings.</description></item><item><description>FutureOnly - Includes only future bookings.</description></item></list>",
											"disabled": true
										},
										{
											"key": "LatestBookingPerHotel",
											"value": "<boolean>",
											"description": "Indicates whether to retrieve only the latest booking per hotel. If set to true,\r\nonly the latest booking per hotel will be retrieved based on the timespan filter.\r\nSo if PastOnly timespan is set, only the latest booking in the past for each hotel is retrieved.",
											"disabled": true
										},
										{
											"key": "CheckingInStartDate",
											"value": "1/1/2024",
											"description": "The start date for filtering bookings by their check-in date."
										},
										{
											"key": "CheckingInEndDate",
											"value": "1/1/2023",
											"description": "The end date for filtering bookings by their check-in date."
										},
										{
											"key": "CheckingOutStartDate",
											"value": "<dateTime>",
											"description": "The start date for filtering bookings by their check-out date.",
											"disabled": true
										},
										{
											"key": "CheckingOutEndDate",
											"value": "<dateTime>",
											"description": "The end date for filtering bookings by their check-out date.",
											"disabled": true
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new booking for the user.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "RoomIds",
									"value": "<uuid>,<uuid>",
									"description": "A list of room IDs that the user wants to book.",
									"type": "text"
								},
								{
									"key": "Checking.CheckInDate",
									"value": "<dateTime>",
									"type": "text"
								},
								{
									"key": "Checking.CheckOutDate",
									"value": "<dateTime>",
									"type": "text"
								},
								{
									"key": "NumberOfGuests.Adults",
									"value": "<integer>",
									"type": "text"
								},
								{
									"key": "NumberOfGuests.Children",
									"value": "<integer>",
									"type": "text"
								},
								{
									"key": "SpecialRequest.Request",
									"value": "<string>",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/bookings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bookings"
							]
						}
					},
					"response": [
						{
							"name": "Returns the ID of the newly created booking.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "RoomIds",
											"value": "<uuid>",
											"description": "A list of room IDs that the user wants to book.",
											"type": "text"
										},
										{
											"key": "RoomIds",
											"value": "<uuid>",
											"type": "text"
										},
										{
											"key": "Checking.CheckInDate",
											"value": "1/1/2025",
											"type": "text"
										},
										{
											"key": "Checking.CheckOutDate",
											"value": "2/1/2025",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Adults",
											"value": "4",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Children",
											"value": "1",
											"type": "text"
										},
										{
											"key": "SpecialRequest.Request",
											"value": "Request",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\"\n}"
						},
						{
							"name": "If the request is invalid (input format error).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "RoomIds",
											"value": "<uuid>,<uuid>",
											"description": "A list of room IDs that the user wants to book.",
											"type": "text"
										},
										{
											"key": "Checking.CheckInDate",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "Checking.CheckOutDate",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Adults",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Children",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "SpecialRequest.Request",
											"value": "<string>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized if credentials are invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "RoomIds",
											"value": "<uuid>,<uuid>",
											"description": "A list of room IDs that the user wants to book.",
											"type": "text"
										},
										{
											"key": "Checking.CheckInDate",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "Checking.CheckOutDate",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Adults",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Children",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "SpecialRequest.Request",
											"value": "<string>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If a room is not found.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "RoomIds",
											"value": "a2db1fd5-f04a-40ec-9418-08dcbba02000",
											"description": "A list of room IDs that the user wants to book.",
											"type": "text"
										},
										{
											"key": "RoomIds",
											"value": "a2db1fd5-f04a-40ec-9418-08dcbba02001",
											"type": "text"
										},
										{
											"key": "Checking.CheckInDate",
											"value": "1/1/2025",
											"type": "text"
										},
										{
											"key": "Checking.CheckOutDate",
											"value": "2/1/2025",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Adults",
											"value": "4",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Children",
											"value": "1",
											"type": "text"
										},
										{
											"key": "SpecialRequest.Request",
											"value": "No request",
											"type": "text"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Room.IdNotFound\",\n            \"message\": \"Room with the given ID does not exist\"\n        }\n    ]\n}"
						},
						{
							"name": "If the booking cannot be created due to conflicts\r\n            (e.g. Rooms from different hotels, Number of guests exceeds the limit, Rooms not available).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "RoomIds",
											"value": "<uuid>,<uuid>",
											"description": "A list of room IDs that the user wants to book.",
											"type": "text"
										},
										{
											"key": "Checking.CheckInDate",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "Checking.CheckOutDate",
											"value": "<dateTime>",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Adults",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Children",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "SpecialRequest.Request",
											"value": "<string>",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If the request is invalid (validation error).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "RoomIds",
											"value": "a2db1fd5-f04a-40ec-9418-08dcbba02000",
											"description": "A list of room IDs that the user wants to book.",
											"type": "text"
										},
										{
											"key": "Checking.CheckInDate",
											"value": "1/1/2025",
											"type": "text"
										},
										{
											"key": "Checking.CheckOutDate",
											"value": "1/1/2024",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Adults",
											"value": "0",
											"type": "text"
										},
										{
											"key": "NumberOfGuests.Children",
											"value": "0",
											"type": "text"
										},
										{
											"key": "SpecialRequest.Request",
											"value": "No Request",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/bookings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "cities",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieves the details of a specific city.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the city."
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the details of the city (User Token).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"country\": {\n    \"name\": \"<string>\"\n  },\n  \"postOffice\": {\n    \"address\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"thumbnailImage\": {\n    \"url\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n}"
								},
								{
									"name": "Returns the details of the city (Admin Token).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime\",\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"country\": {\n    \"name\": \"<string>\"\n  },\n  \"postOffice\": {\n    \"address\": \"<string>\",\n    \"description\": \"<string>\"\n  },\n  \"thumbnailImage\": {\n    \"url\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  }\n}"
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the city is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3b2ef1e7-ec5f-4c3a-56ac-08dcbba01772"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"City.IdNotFound\",\n            \"message\": \"City with the given ID does not exist\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Updates an existing city.",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  },\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the city to update."
										}
									]
								}
							},
							"response": [
								{
									"name": "No content if the update is successful.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"path\": \"/country/name\",\n    \"op\": \"replace\",\n    \"value\": \"Jordan\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "If the request is invalid (input format error).",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"bad json patch document\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  },\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Forbidden if user is not an admin.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  },\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If  city is not found.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3b2ef1e7-ec5f-4c3a-56ac-08dcbba01770"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"City.IdNotFound\",\n            \"message\": \"City with the given ID does not exist\"\n        }\n    ]\n}"
								},
								{
									"name": "If the request is invalid (validation error).",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"path\": \"/country/name\",\n    \"op\": \"replace\",\n    \"value\": \"\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Deletes an existing city.",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the city to delete."
										}
									]
								}
							},
							"response": [
								{
									"name": "No content if the deletion is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Forbidden if user is not an admin.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the city is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "3b2ef1e7-ec5f-4c3a-56ac-08dcbba01770"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"City.IdNotFound\",\n            \"message\": \"City with the given ID does not exist\"\n        }\n    ]\n}"
								},
								{
									"name": "If the city cannot be deleted due to existing hotels.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/cities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"cities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.8\",\n    \"title\": \"Conflict\",\n    \"status\": 409,\n    \"errors\": [\n        {\n            \"code\": \"City.CannotDeleteCityWithHotels\",\n            \"message\": \"Cannot delete city as it has existing hotels\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Searches for cities based on provided filters.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/cities?PaginationParameters.PageNumber=<integer>&PaginationParameters.PageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"cities"
							],
							"query": [
								{
									"key": "PaginationParameters.PageNumber",
									"value": "<integer>",
									"description": "The current page number to retrieve.\r\nMust be a positive integer."
								},
								{
									"key": "PaginationParameters.PageSize",
									"value": "<integer>",
									"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
								}
							]
						}
					},
					"response": [
						{
							"name": "Returns the search results.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities?PaginationParameters.PageNumber=1&PaginationParameters.PageSize=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "1",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "5",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": {\n    \"totalCount\": \"<integer>\",\n    \"items\": [\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"country\": {\n          \"name\": \"<string>\"\n        },\n        \"postOffice\": {\n          \"address\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        \"thumbnailImage\": {\n          \"url\": \"<string>\",\n          \"id\": \"<uuid>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"name\": \"<string>\",\n        \"country\": {\n          \"name\": \"<string>\"\n        },\n        \"postOffice\": {\n          \"address\": \"<string>\",\n          \"description\": \"<string>\"\n        },\n        \"thumbnailImage\": {\n          \"url\": \"<string>\",\n          \"id\": \"<uuid>\",\n          \"createdAt\": \"<dateTime>\",\n          \"updatedAt\": \"<dateTime>\"\n        }\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Unauthorized if credentials are invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities?PaginationParameters.PageNumber=<integer>&PaginationParameters.PageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "<integer>",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "<integer>",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If the request is invalid (validation error).",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities?PaginationParameters.PageNumber=0&PaginationParameters.PageSize=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "0",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "0",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new city.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Name",
									"value": "<string>",
									"description": "The name of the city to be created.",
									"type": "text"
								},
								{
									"key": "Country.Name",
									"value": "<string>",
									"type": "text"
								},
								{
									"key": "PostOffice.Address",
									"value": "<string>",
									"type": "text"
								},
								{
									"key": "PostOffice.Description",
									"value": "<string>",
									"type": "text"
								},
								{
									"key": "ThumbnailImage",
									"description": "The thumbnail image representing the city.",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/cities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"cities"
							]
						}
					},
					"response": [
						{
							"name": "Returns the ID of the newly created city.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "City Name",
											"description": "The name of the city to be created.",
											"type": "text"
										},
										{
											"key": "Country.Name",
											"value": "Country Name",
											"type": "text"
										},
										{
											"key": "PostOffice.Address",
											"value": "Address",
											"type": "text"
										},
										{
											"key": "PostOffice.Description",
											"value": "Description",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the city.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\"\n}"
						},
						{
							"name": "If the request is invalid (input format error).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "1",
											"description": "The name of the city to be created.",
											"type": "text"
										},
										{
											"key": "Country.Name",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "PostOffice.Address",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "PostOffice.Description",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the city.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized if credentials are invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "<string>",
											"description": "The name of the city to be created.",
											"type": "text"
										},
										{
											"key": "Country.Name",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "PostOffice.Address",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "PostOffice.Description",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the city.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden if user is not an admin.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "<string>",
											"description": "The name of the city to be created.",
											"type": "text"
										},
										{
											"key": "Country.Name",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "PostOffice.Address",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "PostOffice.Description",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the city.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If the request is invalid (validation error).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "<string>",
											"description": "The name of the city to be created.",
											"type": "text"
										},
										{
											"key": "Country.Name",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "PostOffice.Address",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "PostOffice.Description",
											"value": "<string>",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the city.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/cities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cities"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "hotels",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "images",
							"item": [
								{
									"name": "Retrieves the images of a specific hotel.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id/images?PageNumber=<integer>&PageSize=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id",
												"images"
											],
											"query": [
												{
													"key": "PageNumber",
													"value": "<integer>",
													"description": "The current page number to retrieve.\r\nMust be a positive integer."
												},
												{
													"key": "PageSize",
													"value": "<integer>",
													"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the hotel."
												}
											]
										}
									},
									"response": [
										{
											"name": "Returns the images of the hotel.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/images?PageNumber=1&PageSize=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"images"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "1",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "5",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"results\": {\n    \"totalCount\": \"<integer>\",\n    \"items\": [\n      {\n        \"url\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      {\n        \"url\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"id\": \"<uuid>\"\n}"
										},
										{
											"name": "Unauthorized if credentials are invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/images?PageNumber=<integer>&PageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"images"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "<integer>",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "<integer>",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "If the hotel is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/images?PageNumber=1&PageSize=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"images"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "1",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "5",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "bcedf059-4835-4bcf-1e71-08dcbba01bc1"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Hotel.IdNotFound\",\n            \"message\": \"Hotel with the given ID does not exist\"\n        }\n    ]\n}"
										},
										{
											"name": "If the request is invalid (validation error).",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/images?PageNumber=0&PageSize=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"images"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "0",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "0",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "bcedf059-4835-4bcf-1e71-08dcbba01bc1"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "reviews",
							"item": [
								{
									"name": "Retrieves the reviews of a specific hotel.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id/reviews?PageNumber=<integer>&PageSize=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id",
												"reviews"
											],
											"query": [
												{
													"key": "PageNumber",
													"value": "<integer>",
													"description": "The current page number to retrieve.\r\nMust be a positive integer."
												},
												{
													"key": "PageSize",
													"value": "<integer>",
													"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the hotel."
												}
											]
										}
									},
									"response": [
										{
											"name": "Returns the reviews of the hotel.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/reviews?PageNumber=1&PageSize=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"reviews"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "1",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "5",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"results\": {\n    \"totalCount\": \"<integer>\",\n    \"items\": [\n      {\n        \"text\": \"<string>\"\n      },\n      {\n        \"text\": \"<string>\"\n      }\n    ]\n  },\n  \"id\": \"<uuid>\"\n}"
										},
										{
											"name": "Unauthorized if credentials are invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/reviews?PageNumber=<integer>&PageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"reviews"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "<integer>",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "<integer>",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "If the hotel is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/reviews?PageNumber=1&PageSize=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"reviews"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "1",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "5",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "bcedf059-4835-4bcf-1e71-08dcbba01bc1"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Hotel.IdNotFound\",\n            \"message\": \"Hotel with the given ID does not exist\"\n        }\n    ]\n}"
										},
										{
											"name": "If the request is invalid (validation error).",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/reviews?PageNumber=0&PageSize=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"reviews"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "0",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "0",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "bcedf059-4835-4bcf-1e71-08dcbba01bc1"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "rooms",
							"item": [
								{
									"name": "Retrieves the rooms of a specific hotel.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id/rooms?PageNumber=<integer>&PageSize=<integer>&roomType=Luxury",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id",
												"rooms"
											],
											"query": [
												{
													"key": "PageNumber",
													"value": "<integer>",
													"description": "The current page number to retrieve.\r\nMust be a positive integer."
												},
												{
													"key": "PageSize",
													"value": "<integer>",
													"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
												},
												{
													"key": "roomType",
													"value": "Luxury",
													"description": "The type of the room."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the hotel."
												}
											]
										}
									},
									"response": [
										{
											"name": "Returns the rooms of the hotel.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/rooms?PageNumber=1&PageSize=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"rooms"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "1",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "5",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														},
														{
															"key": "roomType",
															"value": "Luxury",
															"description": "The type of the room.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"results\": {\n    \"totalCount\": \"<integer>\",\n    \"items\": [\n      {\n        \"id\": \"<uuid>\",\n        \"roomNumber\": \"<integer>\",\n        \"roomType\": \"Budget\",\n        \"description\": \"<string>\",\n        \"price\": {\n          \"value\": \"<double>\"\n        },\n        \"maxNumberOfGuests\": {\n          \"adults\": \"<integer>\",\n          \"children\": \"<integer>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"roomNumber\": \"<integer>\",\n        \"roomType\": \"Budget\",\n        \"description\": \"<string>\",\n        \"price\": {\n          \"value\": \"<double>\"\n        },\n        \"maxNumberOfGuests\": {\n          \"adults\": \"<integer>\",\n          \"children\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"id\": \"<uuid>\"\n}"
										},
										{
											"name": "Returns Luxury rooms of the hotel.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/rooms?PageNumber=1&PageSize=5&roomType=Luxury",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"rooms"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "1",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "5",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														},
														{
															"key": "roomType",
															"value": "Luxury",
															"description": "The type of the room."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"results\": {\n    \"totalCount\": \"<integer>\",\n    \"items\": [\n      {\n        \"id\": \"<uuid>\",\n        \"roomNumber\": \"<integer>\",\n        \"roomType\": \"Budget\",\n        \"description\": \"<string>\",\n        \"price\": {\n          \"value\": \"<double>\"\n        },\n        \"maxNumberOfGuests\": {\n          \"adults\": \"<integer>\",\n          \"children\": \"<integer>\"\n        }\n      },\n      {\n        \"id\": \"<uuid>\",\n        \"roomNumber\": \"<integer>\",\n        \"roomType\": \"Budget\",\n        \"description\": \"<string>\",\n        \"price\": {\n          \"value\": \"<double>\"\n        },\n        \"maxNumberOfGuests\": {\n          \"adults\": \"<integer>\",\n          \"children\": \"<integer>\"\n        }\n      }\n    ]\n  },\n  \"id\": \"<uuid>\"\n}"
										},
										{
											"name": "Unauthorized if credentials are invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/rooms?PageNumber=<integer>&PageSize=<integer>&roomType=Luxury",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"rooms"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "<integer>",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "<integer>",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														},
														{
															"key": "roomType",
															"value": "Luxury",
															"description": "The type of the room."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "If the hotel is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/rooms?PageNumber=1&PageSize=5&roomType=Luxury",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"rooms"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "1",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "5",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														},
														{
															"key": "roomType",
															"value": "Luxury",
															"description": "The type of the room."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "bcedf059-4835-4bcf-1e71-08dcbba01bc1"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Hotel.IdNotFound\",\n            \"message\": \"Hotel with the given ID does not exist\"\n        }\n    ]\n}"
										},
										{
											"name": "If the request is invalid (validation error).",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/hotels/:id/rooms?PageNumber=0&PageSize=0&roomType=Luxury",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"hotels",
														":id",
														"rooms"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "0",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "0",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														},
														{
															"key": "roomType",
															"value": "Luxury",
															"description": "The type of the room."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "bcedf059-4835-4bcf-1e71-08dcbba01bc3"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieves the details of a specific hotel.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the hotel."
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the details of the hotel (User Token).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"starRate\": \"OneStar\",\n  \"description\": \"<string>\",\n  \"thumbnailImage\": {\n    \"url\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  \"cityId\": \"<uuid>\",\n  \"cityName\": \"<string>\",\n  \"coordinates\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\"\n  },\n  \"amenities\": [\n    \"RoomService\",\n    \"Restaurant\"\n  ]\n}"
								},
								{
									"name": "Returns the details of the hotel (Admin Token).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"owner\": \"<string>\",\n  \"numberOfRooms\": \"<integer>\",    \n  \"id\": \"<uuid>\",\n  \"name\": \"<string>\",\n  \"starRate\": \"OneStar\",\n  \"description\": \"<string>\",\n  \"thumbnailImage\": {\n    \"url\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\"\n  },\n  \"cityId\": \"<uuid>\",\n  \"cityName\": \"<string>\",\n  \"coordinates\": {\n    \"latitude\": \"<double>\",\n    \"longitude\": \"<double>\"\n  },\n  \"amenities\": [\n    \"RoomService\",\n    \"Restaurant\"\n  ]\n}"
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the hotel is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "bcedf059-4835-4bcf-1e71-08dcbba01bc1"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Hotel.IdNotFound\",\n            \"message\": \"Hotel with the given ID does not exist\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Updates an existing hotel.",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  },\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the hotel to update."
										}
									]
								}
							},
							"response": [
								{
									"name": "No content if the update is successful.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"path\": \"/coordinates/latitude\",\n    \"op\": \"replace\",\n    \"value\": \"40.2\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "If the request is invalid (input format error).",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    \"bad input\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d297bef3-5f35-4abe-1e74-08dcbba01bc1"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  },\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Forbidden if user is not an admin.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  },\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If a resource is not found (e.g. Hotel, City).",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"path\": \"/cityId\",\n    \"op\": \"replace\",\n    \"value\": \"d297bef3-5f35-4abe-1e74-08dcbba01bc0\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the request is invalid (validation error).",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"path\": \"/coordinates/latitude\",\n    \"op\": \"replace\",\n    \"value\": \"100000\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Deletes an existing hotel.",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the hotel to delete."
										}
									]
								}
							},
							"response": [
								{
									"name": "No content if the deletion is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Forbidden if user is not an admin.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the hotel is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "d297bef3-5f35-4abe-1e74-08dcbba01bc1"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Hotel.IdNotFound\",\n            \"message\": \"Hotel with the given ID does not exist\"\n        }\n    ]\n}"
								},
								{
									"name": "If the hotel cannot be deleted due to existing bookings.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/hotels/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"hotels",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.8\",\n    \"title\": \"Conflict\",\n    \"status\": 409,\n    \"errors\": [\n        {\n            \"code\": \"Hotel.CannotDeleteHotelWithBookings\",\n            \"message\": \"Cannot delete hotel as it has existing bookings\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Searches for hotels based on filters.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/hotels?PaginationParameters.PageNumber=<integer>&PaginationParameters.PageSize=<integer>&Filters.SearchTerm=<string>&Filters.General.Checking.CheckInDate=<dateTime>&Filters.General.Checking.CheckOutDate=<dateTime>&Filters.General.NumberOfGuests.Adults=<integer>&Filters.General.NumberOfGuests.Children=<integer>&Filters.General.Rooms=<integer>&Filters.Advanced.MinPrice.Value=<double>&Filters.Advanced.MaxPrice.Value=<double>&Filters.Advanced.AllowedStarRatings=ThreeStars&Filters.Advanced.AllowedStarRatings=ThreeStars&Filters.Advanced.RequiredAmenities=Parking&Filters.Advanced.RequiredAmenities=AirConditioning&Filters.Advanced.RequiredRoomTypes=Luxury&Filters.Advanced.RequiredRoomTypes=Luxury&Options.Sorting=StarsThenName&Options.IncludeAvailableSearchFilters=<boolean>&Options.IncludePriceDealIfAvailable=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"hotels"
							],
							"query": [
								{
									"key": "PaginationParameters.PageNumber",
									"value": "<integer>",
									"description": "The current page number to retrieve.\r\nMust be a positive integer."
								},
								{
									"key": "PaginationParameters.PageSize",
									"value": "<integer>",
									"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
								},
								{
									"key": "Filters.SearchTerm",
									"value": "<string>",
									"description": "The search term to use when searching for hotels (e.g., hotel name or city name)."
								},
								{
									"key": "Filters.General.Checking.CheckInDate",
									"value": "<dateTime>"
								},
								{
									"key": "Filters.General.Checking.CheckOutDate",
									"value": "<dateTime>"
								},
								{
									"key": "Filters.General.NumberOfGuests.Adults",
									"value": "<integer>"
								},
								{
									"key": "Filters.General.NumberOfGuests.Children",
									"value": "<integer>"
								},
								{
									"key": "Filters.General.Rooms",
									"value": "<integer>",
									"description": "The number of rooms required for the booking.\r\nAny hotel will lower number of rooms will be disqualified from the search"
								},
								{
									"key": "Filters.Advanced.MinPrice.Value",
									"value": "<double>"
								},
								{
									"key": "Filters.Advanced.MaxPrice.Value",
									"value": "<double>"
								},
								{
									"key": "Filters.Advanced.AllowedStarRatings",
									"value": "ThreeStars",
									"description": "A list of allowed star ratings for the hotels in the search results.\r\nAny hotel with a different start rate will be disqualified from the search"
								},
								{
									"key": "Filters.Advanced.AllowedStarRatings",
									"value": "ThreeStars",
									"description": "A list of allowed star ratings for the hotels in the search results.\r\nAny hotel with a different start rate will be disqualified from the search"
								},
								{
									"key": "Filters.Advanced.RequiredAmenities",
									"value": "Parking",
									"description": "A list of required amenities for the hotels in the search results.\r\nAny hotel with at least one missing amenity will be disqualified from the search"
								},
								{
									"key": "Filters.Advanced.RequiredAmenities",
									"value": "AirConditioning",
									"description": "A list of required amenities for the hotels in the search results.\r\nAny hotel with at least one missing amenity will be disqualified from the search"
								},
								{
									"key": "Filters.Advanced.RequiredRoomTypes",
									"value": "Luxury",
									"description": "A list of required room types for the hotels in the search results.\r\nAny hotel with at least one missing room type will be disqualified from the search"
								},
								{
									"key": "Filters.Advanced.RequiredRoomTypes",
									"value": "Luxury",
									"description": "A list of required room types for the hotels in the search results.\r\nAny hotel with at least one missing room type will be disqualified from the search"
								},
								{
									"key": "Options.Sorting",
									"value": "StarsThenName",
									"description": "The sorting option to apply to the search results.\r\nDefault is by hotel name."
								},
								{
									"key": "Options.IncludeAvailableSearchFilters",
									"value": "<boolean>",
									"description": "Indicates whether the available search filters should be included in the response."
								},
								{
									"key": "Options.IncludePriceDealIfAvailable",
									"value": "<boolean>",
									"description": "Indicates whether to include price deals if available for the hotels in the search results."
								}
							]
						}
					},
					"response": [
						{
							"name": "Returns the Search Results including Available Filters and Price Deals.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels?PaginationParameters.PageNumber=1&PaginationParameters.PageSize=5&Filters.SearchTerm=b&Filters.Advanced.AllowedStarRatings=ThreeStars&Filters.Advanced.AllowedStarRatings=TwoStars&Options.IncludeAvailableSearchFilters=true&Options.IncludePriceDealIfAvailable=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "1",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "5",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										},
										{
											"key": "Filters.SearchTerm",
											"value": "b",
											"description": "The search term to use when searching for hotels (e.g., hotel name or city name)."
										},
										{
											"key": "Filters.General.Checking.CheckInDate",
											"value": "<dateTime>",
											"disabled": true
										},
										{
											"key": "Filters.General.Checking.CheckOutDate",
											"value": "<dateTime>",
											"disabled": true
										},
										{
											"key": "Filters.General.NumberOfGuests.Adults",
											"value": "<integer>",
											"disabled": true
										},
										{
											"key": "Filters.General.NumberOfGuests.Children",
											"value": "<integer>",
											"disabled": true
										},
										{
											"key": "Filters.General.Rooms",
											"value": "<integer>",
											"description": "The number of rooms required for the booking.\r\nAny hotel will lower number of rooms will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.MinPrice.Value",
											"value": "<double>",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.MaxPrice.Value",
											"value": "<double>",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.AllowedStarRatings",
											"value": "ThreeStars",
											"description": "A list of allowed star ratings for the hotels in the search results.\r\nAny hotel with a different start rate will be disqualified from the search"
										},
										{
											"key": "Filters.Advanced.AllowedStarRatings",
											"value": "TwoStars",
											"description": "A list of allowed star ratings for the hotels in the search results.\nAny hotel with a different start rate will be disqualified from the search"
										},
										{
											"key": "Filters.Advanced.RequiredAmenities",
											"value": "AirConditioning",
											"description": "A list of required amenities for the hotels in the search results.\r\nAny hotel with at least one missing amenity will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.RequiredRoomTypes",
											"value": "Luxury",
											"description": "A list of required room types for the hotels in the search results.\r\nAny hotel with at least one missing room type will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Options.Sorting",
											"value": "StarsThenName",
											"description": "The sorting option to apply to the search results.\r\nDefault is by hotel name.",
											"disabled": true
										},
										{
											"key": "Options.IncludeAvailableSearchFilters",
											"value": "true",
											"description": "Indicates whether the available search filters should be included in the response."
										},
										{
											"key": "Options.IncludePriceDealIfAvailable",
											"value": "true",
											"description": "Indicates whether to include price deals if available for the hotels in the search results."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"searchResults\": {\n    \"totalCount\": \"<integer>\",\n    \"items\": [\n      {\n        \"summary\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"starRate\": \"FiveStars\",\n          \"description\": \"<string>\",\n          \"thumbnailImage\": {\n            \"url\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          \"cityId\": \"<uuid>\",\n          \"cityName\": \"<string>\"\n        },\n        \"priceDeal\": {\n          \"minimumPriceDeal\": {\n            \"originalPrice\": {\n              \"value\": \"<double>\"\n            },\n            \"appliedDiscount\": {\n              \"hotelId\": \"<uuid>\",\n              \"rate\": {\n                \"percentage\": \"<double>\"\n              },\n              \"id\": \"<uuid>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"finalPrice\": {\n              \"value\": \"<double>\"\n            }\n          },\n          \"maximumPriceDeal\": {\n            \"originalPrice\": {\n              \"value\": \"<double>\"\n            },\n            \"appliedDiscount\": {\n              \"hotelId\": \"<uuid>\",\n              \"rate\": {\n                \"percentage\": \"<double>\"\n              },\n              \"id\": \"<uuid>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"finalPrice\": {\n              \"value\": \"<double>\"\n            }\n          }\n        }\n      },\n      {\n        \"summary\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"starRate\": \"FiveStars\",\n          \"description\": \"<string>\",\n          \"thumbnailImage\": {\n            \"url\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          \"cityId\": \"<uuid>\",\n          \"cityName\": \"<string>\"\n        },\n        \"priceDeal\": {\n          \"minimumPriceDeal\": {\n            \"originalPrice\": {\n              \"value\": \"<double>\"\n            },\n            \"appliedDiscount\": {\n              \"hotelId\": \"<uuid>\",\n              \"rate\": {\n                \"percentage\": \"<double>\"\n              },\n              \"id\": \"<uuid>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"finalPrice\": {\n              \"value\": \"<double>\"\n            }\n          },\n          \"maximumPriceDeal\": {\n            \"originalPrice\": {\n              \"value\": \"<double>\"\n            },\n            \"appliedDiscount\": {\n              \"hotelId\": \"<uuid>\",\n              \"rate\": {\n                \"percentage\": \"<double>\"\n              },\n              \"id\": \"<uuid>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"finalPrice\": {\n              \"value\": \"<double>\"\n            }\n          }\n        }\n      }\n    ]\n  },\n  \"availableFilters\": {\n    \"minimumPrice\": {\n      \"value\": \"<double>\"\n    },\n    \"maximumPrice\": {\n      \"value\": \"<double>\"\n    },\n    \"availableStarRatings\": [\n      \"OneStar\",\n      \"OneStar\"\n    ],\n    \"availableAmenities\": [\n      \"BusinessCenter\",\n      \"WiFi\"\n    ],\n    \"availableRoomTypes\": [\n      \"Boutique\",\n      \"Boutique\"\n    ]\n  }\n}"
						},
						{
							"name": "Returns the Featured hotels.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels?PaginationParameters.PageNumber=1&PaginationParameters.PageSize=5&Options.Sorting=Featured&Options.IncludeAvailableSearchFilters=true&Options.IncludePriceDealIfAvailable=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "1",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "5",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										},
										{
											"key": "Filters.SearchTerm",
											"value": "<string>",
											"description": "The search term to use when searching for hotels (e.g., hotel name or city name).",
											"disabled": true
										},
										{
											"key": "Filters.General.Checking.CheckInDate",
											"value": "<dateTime>",
											"disabled": true
										},
										{
											"key": "Filters.General.Checking.CheckOutDate",
											"value": "<dateTime>",
											"disabled": true
										},
										{
											"key": "Filters.General.NumberOfGuests.Adults",
											"value": "<integer>",
											"disabled": true
										},
										{
											"key": "Filters.General.NumberOfGuests.Children",
											"value": "<integer>",
											"disabled": true
										},
										{
											"key": "Filters.General.Rooms",
											"value": "<integer>",
											"description": "The number of rooms required for the booking.\r\nAny hotel will lower number of rooms will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.MinPrice.Value",
											"value": "<double>",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.MaxPrice.Value",
											"value": "<double>",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.AllowedStarRatings",
											"value": "ThreeStars",
											"description": "A list of allowed star ratings for the hotels in the search results.\r\nAny hotel with a different start rate will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.RequiredAmenities",
											"value": "AirConditioning",
											"description": "A list of required amenities for the hotels in the search results.\r\nAny hotel with at least one missing amenity will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.RequiredRoomTypes",
											"value": "Luxury",
											"description": "A list of required room types for the hotels in the search results.\r\nAny hotel with at least one missing room type will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Options.Sorting",
											"value": "Featured",
											"description": "The sorting option to apply to the search results.\r\nDefault is by hotel name."
										},
										{
											"key": "Options.IncludeAvailableSearchFilters",
											"value": "true",
											"description": "Indicates whether the available search filters should be included in the response."
										},
										{
											"key": "Options.IncludePriceDealIfAvailable",
											"value": "true",
											"description": "Indicates whether to include price deals if available for the hotels in the search results."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"searchResults\": {\n    \"totalCount\": \"<integer>\",\n    \"items\": [\n      {\n        \"summary\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"starRate\": \"FiveStars\",\n          \"description\": \"<string>\",\n          \"thumbnailImage\": {\n            \"url\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          \"cityId\": \"<uuid>\",\n          \"cityName\": \"<string>\"\n        },\n        \"priceDeal\": {\n          \"minimumPriceDeal\": {\n            \"originalPrice\": {\n              \"value\": \"<double>\"\n            },\n            \"appliedDiscount\": {\n              \"hotelId\": \"<uuid>\",\n              \"rate\": {\n                \"percentage\": \"<double>\"\n              },\n              \"id\": \"<uuid>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"finalPrice\": {\n              \"value\": \"<double>\"\n            }\n          },\n          \"maximumPriceDeal\": {\n            \"originalPrice\": {\n              \"value\": \"<double>\"\n            },\n            \"appliedDiscount\": {\n              \"hotelId\": \"<uuid>\",\n              \"rate\": {\n                \"percentage\": \"<double>\"\n              },\n              \"id\": \"<uuid>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"finalPrice\": {\n              \"value\": \"<double>\"\n            }\n          }\n        }\n      },\n      {\n        \"summary\": {\n          \"id\": \"<uuid>\",\n          \"name\": \"<string>\",\n          \"starRate\": \"FiveStars\",\n          \"description\": \"<string>\",\n          \"thumbnailImage\": {\n            \"url\": \"<string>\",\n            \"id\": \"<uuid>\",\n            \"createdAt\": \"<dateTime>\",\n            \"updatedAt\": \"<dateTime>\"\n          },\n          \"cityId\": \"<uuid>\",\n          \"cityName\": \"<string>\"\n        },\n        \"priceDeal\": {\n          \"minimumPriceDeal\": {\n            \"originalPrice\": {\n              \"value\": \"<double>\"\n            },\n            \"appliedDiscount\": {\n              \"hotelId\": \"<uuid>\",\n              \"rate\": {\n                \"percentage\": \"<double>\"\n              },\n              \"id\": \"<uuid>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"finalPrice\": {\n              \"value\": \"<double>\"\n            }\n          },\n          \"maximumPriceDeal\": {\n            \"originalPrice\": {\n              \"value\": \"<double>\"\n            },\n            \"appliedDiscount\": {\n              \"hotelId\": \"<uuid>\",\n              \"rate\": {\n                \"percentage\": \"<double>\"\n              },\n              \"id\": \"<uuid>\",\n              \"createdAt\": \"<dateTime>\",\n              \"updatedAt\": \"<dateTime>\"\n            },\n            \"finalPrice\": {\n              \"value\": \"<double>\"\n            }\n          }\n        }\n      }\n    ]\n  },\n  \"availableFilters\": {\n    \"minimumPrice\": {\n      \"value\": \"<double>\"\n    },\n    \"maximumPrice\": {\n      \"value\": \"<double>\"\n    },\n    \"availableStarRatings\": [\n      \"OneStar\",\n      \"OneStar\"\n    ],\n    \"availableAmenities\": [\n      \"BusinessCenter\",\n      \"WiFi\"\n    ],\n    \"availableRoomTypes\": [\n      \"Boutique\",\n      \"Boutique\"\n    ]\n  }\n}"
						},
						{
							"name": "If the request is invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels?PaginationParameters.PageNumber=string&PaginationParameters.PageSize=string",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "string",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "string",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										},
										{
											"key": "Filters.SearchTerm",
											"value": "<string>",
											"description": "The search term to use when searching for hotels (e.g., hotel name or city name).",
											"disabled": true
										},
										{
											"key": "Filters.General.Checking.CheckInDate",
											"value": "<dateTime>",
											"disabled": true
										},
										{
											"key": "Filters.General.Checking.CheckOutDate",
											"value": "<dateTime>",
											"disabled": true
										},
										{
											"key": "Filters.General.NumberOfGuests.Adults",
											"value": "<integer>",
											"disabled": true
										},
										{
											"key": "Filters.General.NumberOfGuests.Children",
											"value": "<integer>",
											"disabled": true
										},
										{
											"key": "Filters.General.Rooms",
											"value": "<integer>",
											"description": "The number of rooms required for the booking.\r\nAny hotel will lower number of rooms will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.MinPrice.Value",
											"value": "<double>",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.MaxPrice.Value",
											"value": "<double>",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.AllowedStarRatings",
											"value": "ThreeStars",
											"description": "A list of allowed star ratings for the hotels in the search results.\r\nAny hotel with a different start rate will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.RequiredAmenities",
											"value": "AirConditioning",
											"description": "A list of required amenities for the hotels in the search results.\r\nAny hotel with at least one missing amenity will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.RequiredRoomTypes",
											"value": "Luxury",
											"description": "A list of required room types for the hotels in the search results.\r\nAny hotel with at least one missing room type will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Options.Sorting",
											"value": "StarsThenName",
											"description": "The sorting option to apply to the search results.\r\nDefault is by hotel name.",
											"disabled": true
										},
										{
											"key": "Options.IncludeAvailableSearchFilters",
											"value": "<boolean>",
											"description": "Indicates whether the available search filters should be included in the response.",
											"disabled": true
										},
										{
											"key": "Options.IncludePriceDealIfAvailable",
											"value": "<boolean>",
											"description": "Indicates whether to include price deals if available for the hotels in the search results.",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized if credentials are invalid.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels?PaginationParameters.PageNumber=<integer>&PaginationParameters.PageSize=<integer>&Filters.SearchTerm=<string>&Filters.General.Checking.CheckInDate=<dateTime>&Filters.General.Checking.CheckOutDate=<dateTime>&Filters.General.NumberOfGuests.Adults=<integer>&Filters.General.NumberOfGuests.Children=<integer>&Filters.General.Rooms=<integer>&Filters.Advanced.MinPrice.Value=<double>&Filters.Advanced.MaxPrice.Value=<double>&Filters.Advanced.AllowedStarRatings=ThreeStars&Filters.Advanced.RequiredAmenities=AirConditioning&Filters.Advanced.RequiredRoomTypes=Luxury&Options.Sorting=StarsThenName&Options.IncludeAvailableSearchFilters=<boolean>&Options.IncludePriceDealIfAvailable=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "<integer>",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "<integer>",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										},
										{
											"key": "Filters.SearchTerm",
											"value": "<string>",
											"description": "The search term to use when searching for hotels (e.g., hotel name or city name)."
										},
										{
											"key": "Filters.General.Checking.CheckInDate",
											"value": "<dateTime>"
										},
										{
											"key": "Filters.General.Checking.CheckOutDate",
											"value": "<dateTime>"
										},
										{
											"key": "Filters.General.NumberOfGuests.Adults",
											"value": "<integer>"
										},
										{
											"key": "Filters.General.NumberOfGuests.Children",
											"value": "<integer>"
										},
										{
											"key": "Filters.General.Rooms",
											"value": "<integer>",
											"description": "The number of rooms required for the booking.\r\nAny hotel will lower number of rooms will be disqualified from the search"
										},
										{
											"key": "Filters.Advanced.MinPrice.Value",
											"value": "<double>"
										},
										{
											"key": "Filters.Advanced.MaxPrice.Value",
											"value": "<double>"
										},
										{
											"key": "Filters.Advanced.AllowedStarRatings",
											"value": "ThreeStars",
											"description": "A list of allowed star ratings for the hotels in the search results.\r\nAny hotel with a different start rate will be disqualified from the search"
										},
										{
											"key": "Filters.Advanced.RequiredAmenities",
											"value": "AirConditioning",
											"description": "A list of required amenities for the hotels in the search results.\r\nAny hotel with at least one missing amenity will be disqualified from the search"
										},
										{
											"key": "Filters.Advanced.RequiredRoomTypes",
											"value": "Luxury",
											"description": "A list of required room types for the hotels in the search results.\r\nAny hotel with at least one missing room type will be disqualified from the search"
										},
										{
											"key": "Options.Sorting",
											"value": "StarsThenName",
											"description": "The sorting option to apply to the search results.\r\nDefault is by hotel name."
										},
										{
											"key": "Options.IncludeAvailableSearchFilters",
											"value": "<boolean>",
											"description": "Indicates whether the available search filters should be included in the response."
										},
										{
											"key": "Options.IncludePriceDealIfAvailable",
											"value": "<boolean>",
											"description": "Indicates whether to include price deals if available for the hotels in the search results."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If the request is invalid (validation error).",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels?PaginationParameters.PageNumber=1&PaginationParameters.PageSize=5&Filters.General.NumberOfGuests.Adults=0&Filters.General.NumberOfGuests.Children=0&Filters.General.Rooms=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									],
									"query": [
										{
											"key": "PaginationParameters.PageNumber",
											"value": "1",
											"description": "The current page number to retrieve.\r\nMust be a positive integer."
										},
										{
											"key": "PaginationParameters.PageSize",
											"value": "5",
											"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
										},
										{
											"key": "Filters.SearchTerm",
											"value": "<string>",
											"description": "The search term to use when searching for hotels (e.g., hotel name or city name).",
											"disabled": true
										},
										{
											"key": "Filters.General.Checking.CheckInDate",
											"value": "<dateTime>",
											"disabled": true
										},
										{
											"key": "Filters.General.Checking.CheckOutDate",
											"value": "<dateTime>",
											"disabled": true
										},
										{
											"key": "Filters.General.NumberOfGuests.Adults",
											"value": "0"
										},
										{
											"key": "Filters.General.NumberOfGuests.Children",
											"value": "0"
										},
										{
											"key": "Filters.General.Rooms",
											"value": "0",
											"description": "The number of rooms required for the booking.\r\nAny hotel will lower number of rooms will be disqualified from the search"
										},
										{
											"key": "Filters.Advanced.MinPrice.Value",
											"value": "<double>",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.MaxPrice.Value",
											"value": "<double>",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.AllowedStarRatings",
											"value": "ThreeStars",
											"description": "A list of allowed star ratings for the hotels in the search results.\r\nAny hotel with a different start rate will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.RequiredAmenities",
											"value": "AirConditioning",
											"description": "A list of required amenities for the hotels in the search results.\r\nAny hotel with at least one missing amenity will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Filters.Advanced.RequiredRoomTypes",
											"value": "Luxury",
											"description": "A list of required room types for the hotels in the search results.\r\nAny hotel with at least one missing room type will be disqualified from the search",
											"disabled": true
										},
										{
											"key": "Options.Sorting",
											"value": "StarsThenName",
											"description": "The sorting option to apply to the search results.\r\nDefault is by hotel name.",
											"disabled": true
										},
										{
											"key": "Options.IncludeAvailableSearchFilters",
											"value": "<boolean>",
											"description": "Indicates whether the available search filters should be included in the response.",
											"disabled": true
										},
										{
											"key": "Options.IncludePriceDealIfAvailable",
											"value": "<boolean>",
											"description": "Indicates whether to include price deals if available for the hotels in the search results.",
											"disabled": true
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Creates a new hotel.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Name",
									"value": "<string>",
									"description": "The name of the hotel.",
									"type": "text"
								},
								{
									"key": "StarRate",
									"value": "TwoStars",
									"description": " (This can only be one of OneStar,TwoStars,ThreeStars,FourStars,FiveStars)",
									"type": "text"
								},
								{
									"key": "Description",
									"value": "<string>",
									"description": "A description of the hotel, detailing its features and offerings.",
									"type": "text"
								},
								{
									"key": "Owner",
									"value": "<string>",
									"description": "The name of the owner of the hotel.",
									"type": "text"
								},
								{
									"key": "ThumbnailImage",
									"description": "The thumbnail image representing the hotel.",
									"type": "file",
									"src": []
								},
								{
									"key": "Images",
									"description": "A collection of additional images of the hotel.",
									"type": "file",
									"src": []
								},
								{
									"key": "CityId",
									"value": "<uuid>",
									"description": "The ID of the city where the hotel is located.",
									"type": "text"
								},
								{
									"key": "Coordinates.Latitude",
									"value": "<double>",
									"type": "text"
								},
								{
									"key": "Coordinates.Longitude",
									"value": "<double>",
									"type": "text"
								},
								{
									"key": "Amenities",
									"value": "ConferenceRooms,AirportShuttle",
									"description": "A list of amenities available at the hotel.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/hotels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"hotels"
							]
						}
					},
					"response": [
						{
							"name": "Returns the ID of the newly created hotel.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "Some Name",
											"description": "The name of the hotel.",
											"type": "text"
										},
										{
											"key": "StarRate",
											"value": "TwoStars",
											"description": " (This can only be one of OneStar,TwoStars,ThreeStars,FourStars,FiveStars)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "Some Description",
											"description": "A description of the hotel, detailing its features and offerings.",
											"type": "text"
										},
										{
											"key": "Owner",
											"value": "Some Owner",
											"description": "The name of the owner of the hotel.",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the hotel.",
											"type": "file",
											"src": []
										},
										{
											"key": "Images",
											"description": "A collection of additional images of the hotel.",
											"type": "file",
											"src": []
										},
										{
											"key": "CityId",
											"value": "<uuid>",
											"description": "The ID of the city where the hotel is located.",
											"type": "text"
										},
										{
											"key": "Coordinates.Latitude",
											"value": "100",
											"type": "text"
										},
										{
											"key": "Coordinates.Longitude",
											"value": "50",
											"type": "text"
										},
										{
											"key": "Amenities",
											"value": "ConferenceRooms,AirportShuttle",
											"description": "A list of amenities available at the hotel.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\"\n}"
						},
						{
							"name": "If the request is invalid (input format error).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "<string>",
											"description": "The name of the hotel.",
											"type": "text"
										},
										{
											"key": "StarRate",
											"value": "TwoStars",
											"description": " (This can only be one of OneStar,TwoStars,ThreeStars,FourStars,FiveStars)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the hotel, detailing its features and offerings.",
											"type": "text"
										},
										{
											"key": "Owner",
											"value": "<string>",
											"description": "The name of the owner of the hotel.",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the hotel.",
											"type": "file",
											"src": []
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of additional images of the hotel.",
											"type": "text"
										},
										{
											"key": "CityId",
											"value": "<uuid>",
											"description": "The ID of the city where the hotel is located.",
											"type": "text"
										},
										{
											"key": "Coordinates.Latitude",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "Coordinates.Longitude",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "Amenities",
											"value": "ConferenceRooms,AirportShuttle",
											"description": "A list of amenities available at the hotel.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized if credentials are invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "<string>",
											"description": "The name of the hotel.",
											"type": "text"
										},
										{
											"key": "StarRate",
											"value": "TwoStars",
											"description": " (This can only be one of OneStar,TwoStars,ThreeStars,FourStars,FiveStars)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the hotel, detailing its features and offerings.",
											"type": "text"
										},
										{
											"key": "Owner",
											"value": "<string>",
											"description": "The name of the owner of the hotel.",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the hotel.",
											"type": "file",
											"src": []
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of additional images of the hotel.",
											"type": "text"
										},
										{
											"key": "CityId",
											"value": "<uuid>",
											"description": "The ID of the city where the hotel is located.",
											"type": "text"
										},
										{
											"key": "Coordinates.Latitude",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "Coordinates.Longitude",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "Amenities",
											"value": "ConferenceRooms,AirportShuttle",
											"description": "A list of amenities available at the hotel.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden if user is not an admin.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "<string>",
											"description": "The name of the hotel.",
											"type": "text"
										},
										{
											"key": "StarRate",
											"value": "TwoStars",
											"description": " (This can only be one of OneStar,TwoStars,ThreeStars,FourStars,FiveStars)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the hotel, detailing its features and offerings.",
											"type": "text"
										},
										{
											"key": "Owner",
											"value": "<string>",
											"description": "The name of the owner of the hotel.",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the hotel.",
											"type": "file",
											"src": []
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of additional images of the hotel.",
											"type": "text"
										},
										{
											"key": "CityId",
											"value": "<uuid>",
											"description": "The ID of the city where the hotel is located.",
											"type": "text"
										},
										{
											"key": "Coordinates.Latitude",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "Coordinates.Longitude",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "Amenities",
											"value": "ConferenceRooms,AirportShuttle",
											"description": "A list of amenities available at the hotel.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If a required resource is not found (e.g. City).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "<string>",
											"description": "The name of the hotel.",
											"type": "text"
										},
										{
											"key": "StarRate",
											"value": "TwoStars",
											"description": " (This can only be one of OneStar,TwoStars,ThreeStars,FourStars,FiveStars)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the hotel, detailing its features and offerings.",
											"type": "text"
										},
										{
											"key": "Owner",
											"value": "<string>",
											"description": "The name of the owner of the hotel.",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the hotel.",
											"type": "file",
											"src": []
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of additional images of the hotel.",
											"type": "text"
										},
										{
											"key": "CityId",
											"value": "e06663dd-6c26-48fd-741f-08dcbba01bc0",
											"description": "The ID of the city where the hotel is located.",
											"type": "text"
										},
										{
											"key": "Coordinates.Latitude",
											"value": "0",
											"type": "text"
										},
										{
											"key": "Coordinates.Longitude",
											"value": "0",
											"type": "text"
										},
										{
											"key": "Amenities",
											"value": "ConferenceRooms,AirportShuttle",
											"description": "A list of amenities available at the hotel.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If the request is invalid (validation error).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Name",
											"value": "<string>",
											"description": "The name of the hotel.",
											"type": "text"
										},
										{
											"key": "StarRate",
											"value": "TwoStars",
											"description": " (This can only be one of OneStar,TwoStars,ThreeStars,FourStars,FiveStars)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the hotel, detailing its features and offerings.",
											"type": "text"
										},
										{
											"key": "Owner",
											"value": "<string>",
											"description": "The name of the owner of the hotel.",
											"type": "text"
										},
										{
											"key": "ThumbnailImage",
											"description": "The thumbnail image representing the hotel.",
											"type": "file",
											"src": []
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of additional images of the hotel.",
											"type": "text"
										},
										{
											"key": "CityId",
											"value": "<uuid>",
											"description": "The ID of the city where the hotel is located.",
											"type": "text"
										},
										{
											"key": "Coordinates.Latitude",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "Coordinates.Longitude",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "Amenities",
											"value": "ConferenceRooms,AirportShuttle",
											"description": "A list of amenities available at the hotel.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/hotels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"hotels"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "rooms",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "images",
							"item": [
								{
									"name": "Retrieves the images of a specific room.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id/images?PageNumber=<integer>&PageSize=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id",
												"images"
											],
											"query": [
												{
													"key": "PageNumber",
													"value": "<integer>",
													"description": "The current page number to retrieve.\r\nMust be a positive integer."
												},
												{
													"key": "PageSize",
													"value": "<integer>",
													"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>",
													"description": "(Required) The unique identifier of the room."
												}
											]
										}
									},
									"response": [
										{
											"name": "Returns the images of the room.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/rooms/:id/images?PageNumber=1&PageSize=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"rooms",
														":id",
														"images"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "1",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "5",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<uuid>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"results\": {\n    \"totalCount\": \"<integer>\",\n    \"items\": [\n      {\n        \"url\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      },\n      {\n        \"url\": \"<string>\",\n        \"id\": \"<uuid>\",\n        \"createdAt\": \"<dateTime>\",\n        \"updatedAt\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"id\": \"<uuid>\"\n}"
										},
										{
											"name": "Unauthorized if credentials are invalid.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/rooms/:id/images?PageNumber=<integer>&PageSize=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"rooms",
														":id",
														"images"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "<integer>",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "<integer>",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "If the room is not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/rooms/:id/images?PageNumber=1&PageSize=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"rooms",
														":id",
														"images"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "1",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "5",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "bcedf059-4835-4bcf-1e71-08dcbba01bc1"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Room.IdNotFound\",\n            \"message\": \"Room with the given ID does not exist\"\n        }\n    ]\n}"
										},
										{
											"name": "If the request is invalid (validation error).",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "text/plain"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/v1/rooms/:id/images?PageNumber=0&PageSize=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"rooms",
														":id",
														"images"
													],
													"query": [
														{
															"key": "PageNumber",
															"value": "0",
															"description": "The current page number to retrieve.\r\nMust be a positive integer."
														},
														{
															"key": "PageSize",
															"value": "0",
															"description": "The number of items to include on each page of results.\r\nMust be a positive integer."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "bcedf059-4835-4bcf-1e71-08dcbba01bc1"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieves the details of a specific room.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/rooms/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rooms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The unique identifier of the room."
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the details of the room (User Token).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"hotelId\": \"<uuid>\",\n  \"roomNumber\": \"<integer>\",\n  \"roomType\": \"Budget\",\n  \"description\": \"<string>\",\n  \"price\": {\n    \"value\": \"<double>\"\n  },\n  \"maxNumberOfGuests\": {\n    \"adults\": \"<integer>\",\n    \"children\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "Returns the details of the room (Admin Token).",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"hotelId\": \"<uuid>\",\n  \"roomNumber\": \"<integer>\",\n  \"roomType\": \"Budget\",\n  \"description\": \"<string>\",\n  \"price\": {\n    \"value\": \"<double>\"\n  },\n  \"maxNumberOfGuests\": {\n    \"adults\": \"<integer>\",\n    \"children\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the room is not found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "bcedf059-4835-4bcf-1e71-08dcbba01bc1"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Room.IdNotFound\",\n            \"message\": \"Room with the given ID does not exist\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Updates an existing room.",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  },\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rooms/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rooms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the room to update."
										}
									]
								}
							},
							"response": [
								{
									"name": "No content if the update is successful.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"path\": \"/price/value\",\n    \"op\": \"replace\",\n    \"value\": \"150\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "If the request is invalid (input format error).",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"bad input\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "e06663dd-6c26-48fd-741f-08dcbba01bc0"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  },\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Forbidden if user is not an admin.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  },\n  {\n    \"value\": {\n      \"nullable\": true\n    },\n    \"path\": \"<string>\",\n    \"op\": \"<string>\",\n    \"from\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If a resource is not found (e.g. Room, Hotel).",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"path\": \"/hotelId\",\n    \"op\": \"replace\",\n    \"value\": \"e06663dd-6c26-48fd-741f-08dcbba01bc0\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the request is invalid (validation error).",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"path\": \"/price/value\",\n    \"op\": \"replace\",\n    \"value\": \"-1\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Deletes an existing room.",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/rooms/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rooms",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<uuid>",
											"description": "(Required) The ID of the room to delete."
										}
									]
								}
							},
							"response": [
								{
									"name": "No content if the deletion is successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized if credentials are invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "Forbidden if user is not an admin.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the room is not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b7634129-4d67-4581-741d-08dcbba01bc0"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n    \"title\": \"Not Found\",\n    \"status\": 404,\n    \"errors\": [\n        {\n            \"code\": \"Room.IdNotFound\",\n            \"message\": \"Room with the given ID does not exist\"\n        }\n    ]\n}"
								},
								{
									"name": "If the room cannot be deleted due to existing bookings.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/rooms/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"rooms",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<uuid>"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.8\",\n    \"title\": \"Conflict\",\n    \"status\": 409,\n    \"errors\": [\n        {\n            \"code\": \"Room.CannotDeleteRoomWithBookings\",\n            \"message\": \"Cannot delete room as it has existing bookings\"\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Creates a new room.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "HotelId",
									"value": "<uuid>",
									"description": "The unique identifier of the hotel where the room is being created.",
									"type": "text"
								},
								{
									"key": "RoomNumber",
									"value": "<integer>",
									"description": "The room number for the new room.",
									"type": "text"
								},
								{
									"key": "RoomType",
									"value": "Luxury",
									"description": " (This can only be one of Luxury,Budget,Boutique)",
									"type": "text"
								},
								{
									"key": "Description",
									"value": "<string>",
									"description": "A description of the room, detailing its features.",
									"type": "text"
								},
								{
									"key": "Price.Value",
									"value": "<double>",
									"type": "text"
								},
								{
									"key": "MaxNumberOfGuests.Adults",
									"value": "<integer>",
									"type": "text"
								},
								{
									"key": "MaxNumberOfGuests.Children",
									"value": "<integer>",
									"type": "text"
								},
								{
									"key": "Images",
									"value": "<binary>,<binary>",
									"description": "A collection of images representing the room.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/rooms",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"rooms"
							]
						}
					},
					"response": [
						{
							"name": "Returns the ID of the newly created room.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "HotelId",
											"value": "<uuid>",
											"description": "The unique identifier of the hotel where the room is being created.",
											"type": "text"
										},
										{
											"key": "RoomNumber",
											"value": "<integer>",
											"description": "The room number for the new room.",
											"type": "text"
										},
										{
											"key": "RoomType",
											"value": "Luxury",
											"description": " (This can only be one of Luxury,Budget,Boutique)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the room, detailing its features.",
											"type": "text"
										},
										{
											"key": "Price.Value",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Adults",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Children",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "Images",
											"description": "A collection of images representing the room.",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rooms"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<uuid>\"\n}"
						},
						{
							"name": "If the request is invalid (input format error).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "HotelId",
											"value": "<uuid>",
											"description": "The unique identifier of the hotel where the room is being created.",
											"type": "text"
										},
										{
											"key": "RoomNumber",
											"value": "<integer>",
											"description": "The room number for the new room.",
											"type": "text"
										},
										{
											"key": "RoomType",
											"value": "Luxury",
											"description": " (This can only be one of Luxury,Budget,Boutique)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the room, detailing its features.",
											"type": "text"
										},
										{
											"key": "Price.Value",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Adults",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Children",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of images representing the room.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rooms"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Unauthorized if credentials are invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "HotelId",
											"value": "<uuid>",
											"description": "The unique identifier of the hotel where the room is being created.",
											"type": "text"
										},
										{
											"key": "RoomNumber",
											"value": "<integer>",
											"description": "The room number for the new room.",
											"type": "text"
										},
										{
											"key": "RoomType",
											"value": "Luxury",
											"description": " (This can only be one of Luxury,Budget,Boutique)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the room, detailing its features.",
											"type": "text"
										},
										{
											"key": "Price.Value",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Adults",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Children",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of images representing the room.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rooms"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Forbidden if user is not an admin.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "HotelId",
											"value": "<uuid>",
											"description": "The unique identifier of the hotel where the room is being created.",
											"type": "text"
										},
										{
											"key": "RoomNumber",
											"value": "<integer>",
											"description": "The room number for the new room.",
											"type": "text"
										},
										{
											"key": "RoomType",
											"value": "Luxury",
											"description": " (This can only be one of Luxury,Budget,Boutique)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the room, detailing its features.",
											"type": "text"
										},
										{
											"key": "Price.Value",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Adults",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Children",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of images representing the room.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rooms"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If a required resource is not found (e.g. Hotel).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "HotelId",
											"value": "<uuid>",
											"description": "The unique identifier of the hotel where the room is being created.",
											"type": "text"
										},
										{
											"key": "RoomNumber",
											"value": "<integer>",
											"description": "The room number for the new room.",
											"type": "text"
										},
										{
											"key": "RoomType",
											"value": "Luxury",
											"description": " (This can only be one of Luxury,Budget,Boutique)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the room, detailing its features.",
											"type": "text"
										},
										{
											"key": "Price.Value",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Adults",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Children",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of images representing the room.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rooms"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If the room cannot be created due to conflicts (e.g. existing room number).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "HotelId",
											"value": "<uuid>",
											"description": "The unique identifier of the hotel where the room is being created.",
											"type": "text"
										},
										{
											"key": "RoomNumber",
											"value": "<integer>",
											"description": "The room number for the new room.",
											"type": "text"
										},
										{
											"key": "RoomType",
											"value": "Luxury",
											"description": " (This can only be one of Luxury,Budget,Boutique)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the room, detailing its features.",
											"type": "text"
										},
										{
											"key": "Price.Value",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Adults",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Children",
											"value": "<integer>",
											"type": "text"
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of images representing the room.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rooms"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If the request is invalid (validation error).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "HotelId",
											"value": "<uuid>",
											"description": "The unique identifier of the hotel where the room is being created.",
											"type": "text"
										},
										{
											"key": "RoomNumber",
											"value": "<integer>",
											"description": "The room number for the new room.",
											"type": "text"
										},
										{
											"key": "RoomType",
											"value": "Luxury",
											"description": " (This can only be one of Luxury,Budget,Boutique)",
											"type": "text"
										},
										{
											"key": "Description",
											"value": "<string>",
											"description": "A description of the room, detailing its features.",
											"type": "text"
										},
										{
											"key": "Price.Value",
											"value": "<double>",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Adults",
											"value": "0",
											"type": "text"
										},
										{
											"key": "MaxNumberOfGuests.Children",
											"value": "0",
											"type": "text"
										},
										{
											"key": "Images",
											"value": "<binary>,<binary>",
											"description": "A collection of images representing the room.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rooms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rooms"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "token",
					"item": [
						{
							"name": "Authenticates a user and generates a token.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Username",
											"value": "<string>",
											"description": "The username of the user attempting to log in.",
											"type": "text"
										},
										{
											"key": "Password",
											"value": "<string>",
											"description": "The password of the user attempting to log in.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/users/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "Returns User token.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Username",
													"value": "user",
													"description": "The username of the user attempting to log in.",
													"type": "text"
												},
												{
													"key": "Password",
													"value": "q~>k6Dz'kD27",
													"description": "The password of the user attempting to log in.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/users/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"token\": \"<string>\"\n}"
								},
								{
									"name": "Returns Admin token.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Username",
													"value": "admin",
													"description": "The username of the user attempting to log in.",
													"type": "text"
												},
												{
													"key": "Password",
													"value": "q~>k6Dz'kD27",
													"description": "The password of the user attempting to log in.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/users/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"token\": \"<string>\"\n}"
								},
								{
									"name": "Unauthorized if credentials are incorrect.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Username",
													"value": "user",
													"description": "The username of the user attempting to log in.",
													"type": "text"
												},
												{
													"key": "Password",
													"value": "invalid_pass",
													"description": "The password of the user attempting to log in.",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/users/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"token"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "If the request is invalid (validation error).",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "Username",
													"value": "user",
													"description": "The username of the user attempting to log in.",
													"type": "text"
												},
												{
													"key": "Password",
													"value": "<string>",
													"description": "The password of the user attempting to log in.",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/users/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"token"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Registers a new user in the system.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "Username",
									"value": "<string>",
									"description": "The username for the new user.",
									"type": "text"
								},
								{
									"key": "Password",
									"value": "<string>",
									"description": "The password for the new user.",
									"type": "text"
								},
								{
									"key": "Email",
									"value": "<string>",
									"description": "The email address for the new user.",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "User created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Username",
											"value": "new_uername",
											"description": "The username for the new user.",
											"type": "text"
										},
										{
											"key": "Password",
											"value": "74kD88&>xd`=",
											"description": "The password for the new user.",
											"type": "text"
										},
										{
											"key": "Email",
											"value": "new_email@mail.com",
											"description": "The email address for the new user.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict if credentials causes a conflict.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Username",
											"value": "user",
											"description": "The username for the new user.",
											"type": "text"
										},
										{
											"key": "Password",
											"value": "74kD88&>xd`=",
											"description": "The password for the new user.",
											"type": "text"
										},
										{
											"key": "Email",
											"value": "new_email@mail.com",
											"description": "The email address for the new user.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "If the request is invalid (validation error).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "Username",
											"value": "user",
											"description": "The username for the new user.",
											"type": "text"
										},
										{
											"key": "Password",
											"value": "weak_password",
											"description": "The password for the new user.",
											"type": "text"
										},
										{
											"key": "Email",
											"value": "invalid_email",
											"description": "The email address for the new user.",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"title\": \"<string>\",\n  \"status\": \"<string>\",\n  \"errors\": [\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    },\n    {\n      \"code\": \"<string>\",\n      \"message\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		},
		{
			"key": "bearerToken",
			"value": ""
		}
	]
}